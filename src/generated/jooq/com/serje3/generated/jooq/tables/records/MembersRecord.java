/*
 * This file is generated by jOOQ.
 */
package com.serje3.generated.jooq.tables.records;


import com.serje3.generated.jooq.tables.Members;

import java.time.LocalDateTime;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record6;
import org.jooq.Row6;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class MembersRecord extends UpdatableRecordImpl<MembersRecord> implements Record6<Integer, Integer, Integer, String, Boolean, LocalDateTime> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>members.id</code>.
     */
    public MembersRecord setId(Integer value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>members.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>members.user_id</code>.
     */
    public MembersRecord setUserId(Integer value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>members.user_id</code>.
     */
    public Integer getUserId() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>members.guild_id</code>.
     */
    public MembersRecord setGuildId(Integer value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>members.guild_id</code>.
     */
    public Integer getGuildId() {
        return (Integer) get(2);
    }

    /**
     * Setter for <code>members.effective_username</code>.
     */
    public MembersRecord setEffectiveUsername(String value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>members.effective_username</code>.
     */
    public String getEffectiveUsername() {
        return (String) get(3);
    }

    /**
     * Setter for <code>members.is_admin</code>.
     */
    public MembersRecord setIsAdmin(Boolean value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>members.is_admin</code>.
     */
    public Boolean getIsAdmin() {
        return (Boolean) get(4);
    }

    /**
     * Setter for <code>members.join_date</code>.
     */
    public MembersRecord setJoinDate(LocalDateTime value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>members.join_date</code>.
     */
    public LocalDateTime getJoinDate() {
        return (LocalDateTime) get(5);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record6 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row6<Integer, Integer, Integer, String, Boolean, LocalDateTime> fieldsRow() {
        return (Row6) super.fieldsRow();
    }

    @Override
    public Row6<Integer, Integer, Integer, String, Boolean, LocalDateTime> valuesRow() {
        return (Row6) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return Members.MEMBERS.ID;
    }

    @Override
    public Field<Integer> field2() {
        return Members.MEMBERS.USER_ID;
    }

    @Override
    public Field<Integer> field3() {
        return Members.MEMBERS.GUILD_ID;
    }

    @Override
    public Field<String> field4() {
        return Members.MEMBERS.EFFECTIVE_USERNAME;
    }

    @Override
    public Field<Boolean> field5() {
        return Members.MEMBERS.IS_ADMIN;
    }

    @Override
    public Field<LocalDateTime> field6() {
        return Members.MEMBERS.JOIN_DATE;
    }

    @Override
    public Integer component1() {
        return getId();
    }

    @Override
    public Integer component2() {
        return getUserId();
    }

    @Override
    public Integer component3() {
        return getGuildId();
    }

    @Override
    public String component4() {
        return getEffectiveUsername();
    }

    @Override
    public Boolean component5() {
        return getIsAdmin();
    }

    @Override
    public LocalDateTime component6() {
        return getJoinDate();
    }

    @Override
    public Integer value1() {
        return getId();
    }

    @Override
    public Integer value2() {
        return getUserId();
    }

    @Override
    public Integer value3() {
        return getGuildId();
    }

    @Override
    public String value4() {
        return getEffectiveUsername();
    }

    @Override
    public Boolean value5() {
        return getIsAdmin();
    }

    @Override
    public LocalDateTime value6() {
        return getJoinDate();
    }

    @Override
    public MembersRecord value1(Integer value) {
        setId(value);
        return this;
    }

    @Override
    public MembersRecord value2(Integer value) {
        setUserId(value);
        return this;
    }

    @Override
    public MembersRecord value3(Integer value) {
        setGuildId(value);
        return this;
    }

    @Override
    public MembersRecord value4(String value) {
        setEffectiveUsername(value);
        return this;
    }

    @Override
    public MembersRecord value5(Boolean value) {
        setIsAdmin(value);
        return this;
    }

    @Override
    public MembersRecord value6(LocalDateTime value) {
        setJoinDate(value);
        return this;
    }

    @Override
    public MembersRecord values(Integer value1, Integer value2, Integer value3, String value4, Boolean value5, LocalDateTime value6) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached MembersRecord
     */
    public MembersRecord() {
        super(Members.MEMBERS);
    }

    /**
     * Create a detached, initialised MembersRecord
     */
    public MembersRecord(Integer id, Integer userId, Integer guildId, String effectiveUsername, Boolean isAdmin, LocalDateTime joinDate) {
        super(Members.MEMBERS);

        setId(id);
        setUserId(userId);
        setGuildId(guildId);
        setEffectiveUsername(effectiveUsername);
        setIsAdmin(isAdmin);
        setJoinDate(joinDate);
        resetChangedOnNotNull();
    }
}
