/*
 * This file is generated by jOOQ.
 */
package com.serje3.generated.jooq.tables.records;


import com.serje3.generated.jooq.tables.RecentTracks;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class RecentTracksRecord extends UpdatableRecordImpl<RecentTracksRecord> implements Record4<Long, Long, String, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>recent_tracks.id</code>.
     */
    public RecentTracksRecord setId(Long value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>recent_tracks.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>recent_tracks.guild_id</code>.
     */
    public RecentTracksRecord setGuildId(Long value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>recent_tracks.guild_id</code>.
     */
    public Long getGuildId() {
        return (Long) get(1);
    }

    /**
     * Setter for <code>recent_tracks.name</code>.
     */
    public RecentTracksRecord setName(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>recent_tracks.name</code>.
     */
    public String getName() {
        return (String) get(2);
    }

    /**
     * Setter for <code>recent_tracks.url</code>.
     */
    public RecentTracksRecord setUrl(String value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>recent_tracks.url</code>.
     */
    public String getUrl() {
        return (String) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row4<Long, Long, String, String> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    @Override
    public Row4<Long, Long, String, String> valuesRow() {
        return (Row4) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return RecentTracks.RECENT_TRACKS.ID;
    }

    @Override
    public Field<Long> field2() {
        return RecentTracks.RECENT_TRACKS.GUILD_ID;
    }

    @Override
    public Field<String> field3() {
        return RecentTracks.RECENT_TRACKS.NAME;
    }

    @Override
    public Field<String> field4() {
        return RecentTracks.RECENT_TRACKS.URL;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public Long component2() {
        return getGuildId();
    }

    @Override
    public String component3() {
        return getName();
    }

    @Override
    public String component4() {
        return getUrl();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public Long value2() {
        return getGuildId();
    }

    @Override
    public String value3() {
        return getName();
    }

    @Override
    public String value4() {
        return getUrl();
    }

    @Override
    public RecentTracksRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public RecentTracksRecord value2(Long value) {
        setGuildId(value);
        return this;
    }

    @Override
    public RecentTracksRecord value3(String value) {
        setName(value);
        return this;
    }

    @Override
    public RecentTracksRecord value4(String value) {
        setUrl(value);
        return this;
    }

    @Override
    public RecentTracksRecord values(Long value1, Long value2, String value3, String value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached RecentTracksRecord
     */
    public RecentTracksRecord() {
        super(RecentTracks.RECENT_TRACKS);
    }

    /**
     * Create a detached, initialised RecentTracksRecord
     */
    public RecentTracksRecord(Long id, Long guildId, String name, String url) {
        super(RecentTracks.RECENT_TRACKS);

        setId(id);
        setGuildId(guildId);
        setName(name);
        setUrl(url);
        resetChangedOnNotNull();
    }
}
