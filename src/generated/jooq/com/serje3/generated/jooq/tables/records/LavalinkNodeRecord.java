/*
 * This file is generated by jOOQ.
 */
package com.serje3.generated.jooq.tables.records;


import com.serje3.generated.jooq.tables.LavalinkNode;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class LavalinkNodeRecord extends UpdatableRecordImpl<LavalinkNodeRecord> implements Record4<Integer, String, String, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>lavalink_node.id</code>.
     */
    public LavalinkNodeRecord setId(Integer value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>lavalink_node.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>lavalink_node.url</code>.
     */
    public LavalinkNodeRecord setUrl(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>lavalink_node.url</code>.
     */
    public String getUrl() {
        return (String) get(1);
    }

    /**
     * Setter for <code>lavalink_node.password</code>.
     */
    public LavalinkNodeRecord setPassword(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>lavalink_node.password</code>.
     */
    public String getPassword() {
        return (String) get(2);
    }

    /**
     * Setter for <code>lavalink_node.region</code>.
     */
    public LavalinkNodeRecord setRegion(String value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>lavalink_node.region</code>.
     */
    public String getRegion() {
        return (String) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row4<Integer, String, String, String> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    @Override
    public Row4<Integer, String, String, String> valuesRow() {
        return (Row4) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return LavalinkNode.LAVALINK_NODE.ID;
    }

    @Override
    public Field<String> field2() {
        return LavalinkNode.LAVALINK_NODE.URL;
    }

    @Override
    public Field<String> field3() {
        return LavalinkNode.LAVALINK_NODE.PASSWORD;
    }

    @Override
    public Field<String> field4() {
        return LavalinkNode.LAVALINK_NODE.REGION;
    }

    @Override
    public Integer component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getUrl();
    }

    @Override
    public String component3() {
        return getPassword();
    }

    @Override
    public String component4() {
        return getRegion();
    }

    @Override
    public Integer value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getUrl();
    }

    @Override
    public String value3() {
        return getPassword();
    }

    @Override
    public String value4() {
        return getRegion();
    }

    @Override
    public LavalinkNodeRecord value1(Integer value) {
        setId(value);
        return this;
    }

    @Override
    public LavalinkNodeRecord value2(String value) {
        setUrl(value);
        return this;
    }

    @Override
    public LavalinkNodeRecord value3(String value) {
        setPassword(value);
        return this;
    }

    @Override
    public LavalinkNodeRecord value4(String value) {
        setRegion(value);
        return this;
    }

    @Override
    public LavalinkNodeRecord values(Integer value1, String value2, String value3, String value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached LavalinkNodeRecord
     */
    public LavalinkNodeRecord() {
        super(LavalinkNode.LAVALINK_NODE);
    }

    /**
     * Create a detached, initialised LavalinkNodeRecord
     */
    public LavalinkNodeRecord(Integer id, String url, String password, String region) {
        super(LavalinkNode.LAVALINK_NODE);

        setId(id);
        setUrl(url);
        setPassword(password);
        setRegion(region);
        resetChangedOnNotNull();
    }
}
